import org.jetbrains.kotlin.gradle.dsl.KotlinVersion

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.devtools.ksp'
    id 'com.google.gms.google-services'
    id 'com.google.protobuf' version '0.9.4'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.apollographql.apollo3' version '4.0.0-beta.6'
}

android {
    compileSdk 34
    namespace 'al.bruno.sportify'
    defaultConfig {
        applicationId "al.bruno.sportify"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig = true
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.10"
    }
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    kotlin {
        compilerOptions {
            languageVersion.set(KotlinVersion.KOTLIN_1_9)
            apiVersion.set(KotlinVersion.KOTLIN_1_9)
        }
    }

    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
    implementation libs.activity.compose
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime
    // compose
    implementation platform(libs.compose.bom)
    implementation libs.ui
    implementation libs.ui.graphics
    implementation libs.ui.tooling
    implementation libs.ui.tooling.preview
    implementation libs.material3
    implementation libs.ui.material
    implementation libs.material.icons
    implementation libs.foundation
    implementation libs.navigation
    implementation libs.navigation.ui
    implementation libs.paging.compose

    implementation libs.datastore.core
    implementation libs.preference.datastore
    implementation libs.protobuf

    // Credentials
    implementation libs.credentials
    implementation libs.credentials.play.services.auth
    implementation libs.googleid

    // Ktor
    implementation libs.ktor.client.core
    implementation libs.ktor.client.cio
    implementation libs.ktor.client.auth
    implementation libs.ktor.client.content.negotiation
    implementation libs.ktor.client.logging
    implementation libs.ktor.client.serialization
    implementation libs.kotlinx.serialization.json
    implementation libs.apollo.runtime

    // Firebase & PlayService
    implementation platform(libs.firebase.bom)
    implementation libs.analytics

    // Koin
    implementation platform(libs.koin.bom)
    implementation libs.koin.android
    implementation libs.koin.compose
    implementation libs.glide

    implementation project(':foundation')

    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.ext.junit
    androidTestImplementation libs.espresso.core
}

apollo {
    generateKotlinModels.set(true)
    service("service") {
        packageName = "al.bruno.sportify"
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'
    }
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}