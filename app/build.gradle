plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.protobuf' version '0.9.4'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdk 34
    namespace 'al.bruno.sportify'
    defaultConfig {
        applicationId "al.bruno.sportify"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            multiDexEnabled = true
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.10"
    }
    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }

    kotlinOptions {
        jvmTarget = "17"
    }
}

dependencies {
//    implementation platform(libs.compose.bom)
//    implementation libs.activity.compose
//    implementation libs.ui.material
//    implementation libs.ui
//    implementation libs.ui.graphics
//    implementation libs.ui.tooling.preview
//    implementation libs.material3
//    implementation libs.material.icons
//    implementation libs.navigation
//
//    implementation libs.lifecycle
//    implementation libs.constraintlayout
//    implementation libs.material
//    implementation libs.navigation.ui
//    implementation libs.navigation.fragment

    implementation platform('androidx.compose:compose-bom:2024.02.01')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.foundation:foundation'

    implementation 'com.google.android.material:material:1.11.0'

    implementation 'androidx.navigation:navigation-compose:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    //
    implementation "androidx.paging:paging-compose:3.2.1"

    implementation 'androidx.datastore:datastore-core:1.0.0'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.25.3'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.50'
    ksp 'com.google.dagger:hilt-android-compiler:2.50'
//    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
//    ksp "androidx.hilt:hilt-compiler:1.2.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'
    }
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}